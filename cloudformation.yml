AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template with intentional errors for testing"

Parameters:
  BucketName:
    Type: String
    Description: "Name of the S3 bucket"
  
  InstanceType:
    Type: String
    Default: "t2.micro"
    Description: "EC2 instance type"
    AllowedValues:
      - "t2.micro"
      - "t2.small"
      - "t3.micro"
      # Missing "t3.small" (error)
    ConstraintDescription: "Must be a valid EC2 instance type."

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing EC2 KeyPair for SSH access"

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: InvalidValue # Invalid versioning status (error)

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-invalidid12345 # Invalid AMI ID (error)
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref SubnetId

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable SSH access"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 999.999.999.999/0 # Invalid CIDR block (error)

  SubnetId:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "PublicSubnet"

  VpcId:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "TestVPC"

Outputs:
  S3BucketName:
    Description: "The name of the S3 bucket"
    Value: !Ref S3Bucket

  EC2PublicIP:
    Description: "Public IP address of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicIp
